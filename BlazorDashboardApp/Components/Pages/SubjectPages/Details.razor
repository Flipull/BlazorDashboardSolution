@page "/subject/details"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Editor")]

@inject NavigationManager NavigationManager

@using BlazorDashboardApp.Services
@inject SubjectService SubjectService
@using BlazorDashboardApp.ViewModels

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Subject</h2>
    <hr />
    @if (subject is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@subject.Name</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@subject.Description</dd>
            <dt class="col-sm-2">Photofile</dt>
            <dd class="col-sm-10">@subject.Photofile</dd>
        </dl>
        <div>
            <a href="@($"/datum/index?subjectid={subject.Id}")">Show Data</a> |
            <a href="@($"/subject/edit?id={subject.Id}")">Edit</a> |
            <a href="@($"/subject")">Back to List</a>
        </div>
    }
</div>

@code {
    private SubjectViewModel? subject;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        subject = await SubjectService.Get(Id);

        //if (subject is null)
        //    NavigationManager.NavigateTo("notfound");
    }
}
